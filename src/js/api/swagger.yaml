---
swagger: "2.0"
info:
  description: "API dos eventos de frontend"
  version: "1.0.0"
  title: "Frontend BR - Eventos"
  contact:
    email: "angeliski@hotmail.com"
  license:
    name: "MIT"
    url: "https://github.com/frontendbr/eventos/blob/develop/LICENSE.md"
host: "frontendbr.com.br"
basePath: "/eventos/api/v1"
tags:
- name: "event"
  description: "Everything about Events"
schemes:
- "http"
paths:
  /event:
    get:
      tags:
      - "event"
      summary: "List all events"
      description: ""
      operationId: "listEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "month"
        in: "query"
        description: "The month."
        required: false
        type: "integer"
        maximum: 12
        minimum: 1
      - name: "state"
        in: "query"
        description: "The state."
        required: false
        type: "string"
      - name: "keywords"
        in: "query"
        description: "keywords for search."
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "The number of items to skip before starting to collect the result\
          \ set."
        required: false
        type: "integer"
        default: 0
        minimum: 0
      - name: "limit"
        in: "query"
        description: "The numbers of items to return."
        required: false
        type: "integer"
        default: 20
        maximum: 100
        minimum: 1
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Event"
    post:
      tags:
      - "event"
      summary: "Add a new event"
      description: ""
      operationId: "addEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/body"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Event"
  /event/findByStatus:
    get:
      tags:
      - "event"
      summary: "Finds Events by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findEventsByStatus"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "The number of items to skip before starting to collect the result\
          \ set."
        required: false
        type: "integer"
        default: 0
        minimum: 0
      - name: "limit"
        in: "query"
        description: "The numbers of items to return."
        required: false
        type: "integer"
        default: 20
        maximum: 100
        minimum: 1
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "array"
        items:
          type: "string"
          default: "available"
          enum:
          - "available"
          - "pending"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "Event"
  /event/{eventId}:
    get:
      tags:
      - "event"
      summary: "Find event by ID"
      description: "Returns a single Event"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
    post:
      tags:
      - "event"
      summary: "Updates a event in the store with form data"
      description: ""
      operationId: "updateEventWithForm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Event object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/body_1"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Event"
    delete:
      tags:
      - "event"
      summary: "Deletes a event"
      description: ""
      operationId: "deleteEvent"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "Event id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{eventId}/uploadImage:
    post:
      tags:
      - "event"
      summary: "uploads an image"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to update"
        required: true
        type: "integer"
        format: "int64"
      - name: "additionalMetadata"
        in: "formData"
        description: "Additional data to pass to server"
        required: false
        type: "string"
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Event"
definitions:
  Event:
    type: "object"
    required:
    - "date"
    - "eventLink"
    - "local"
    - "price"
    - "shortDescription"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Front In Sampa"
      date:
        type: "string"
        format: "date"
        example: "20/02/2017"
      local:
        type: "string"
        example: "Avenida Paulista, 1000"
      shortDescription:
        type: "string"
        example: "Evento para frontends discutirem sobre assuntos bacanas"
      price:
        type: "integer"
        example: "100.00"
      eventLink:
        type: "string"
        example: "http://link-para-o-evento.com.br"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  inline_response_200:
    required:
    - "date"
    - "eventLink"
    - "local"
    - "price"
    - "shortDescription"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Front In Sampa"
      date:
        type: "string"
        format: "date"
        example: "20/02/2017"
      local:
        type: "string"
        example: "Avenida Paulista, 1000"
      shortDescription:
        type: "string"
        example: "Evento para frontends discutirem sobre assuntos bacanas"
      price:
        type: "integer"
        example: "100.00"
      eventLink:
        type: "string"
        example: "http://link-para-o-evento.com.br"
  body:
    type: "object"
    required:
    - "date"
    - "eventLink"
    - "local"
    - "price"
    - "shortDescription"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Front In Sampa"
      date:
        type: "string"
        format: "date"
        example: "20/02/2017"
      local:
        type: "string"
        example: "Avenida Paulista, 1000"
      shortDescription:
        type: "string"
        example: "Evento para frontends discutirem sobre assuntos bacanas"
      price:
        type: "integer"
        example: "100.00"
      eventLink:
        type: "string"
        example: "http://link-para-o-evento.com.br"
  body_1:
    type: "object"
    required:
    - "date"
    - "eventLink"
    - "local"
    - "price"
    - "shortDescription"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Front In Sampa"
      date:
        type: "string"
        format: "date"
        example: "20/02/2017"
      local:
        type: "string"
        example: "Avenida Paulista, 1000"
      shortDescription:
        type: "string"
        example: "Evento para frontends discutirem sobre assuntos bacanas"
      price:
        type: "integer"
        example: "100.00"
      eventLink:
        type: "string"
        example: "http://link-para-o-evento.com.br"
  inline_response_200_1:
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
